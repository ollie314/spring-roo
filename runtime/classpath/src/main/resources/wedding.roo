project setup --topLevelPackage com.wedding
jpa setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT

property list
property add --key database.url --value jdbc:hsqldb:${user.home}/my-wedding
property list

entity jpa --class ~.domain.Rsvp --testAutomatically
field string code --notNull --sizeMin 1 --sizeMax 30
field string email --sizeMax 30
field number attending --type java.lang.Integer
field string specialRequests --sizeMax 100
field date confirmed --type java.util.Date

web mvc setup
repository jpa --entity ~.domain.Rsvp --interface ~.repository.RsvpRepository
service --entity ~.domain.Rsvp --repository ~.repository.RsvpRepository --interface ~.service.api.RsvpService --class ~.service.impl.RsvpServiceImpl
web mvc controller --controller ~.web.RsvpController --entity ~.domain.Rsvp --service ~.service.api.RsvpService --responseType THYMELEAF

//selenium test --controller ~.web.RsvpController

// (OPTION: quit, mvn test, mvn tomcat:run, localhost:8080/wedding, mvn selenium:selenese)

logging setup --level ERROR --package WEB
security setup

//web mvc controller --class ~.web.PublicRsvpController
finder add --class ~.domain.Rsvp --name findByCodeEquals

//email sender setup --hostServer 127.0.0.1
//field email template --class ~.web.PublicRsvpController
//field email template --class ~.web.RsvpController

// Complete manual configuration as described at http://blog.springsource.com/roo-part-2/
// Start from the "Final Steps" section, towards the bottom of the blog entry
