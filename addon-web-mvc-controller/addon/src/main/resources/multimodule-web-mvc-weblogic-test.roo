project setup --topLevelPackage org.example --multimodule BASIC
module create --moduleName model  --parent ~
module create --moduleName repository  --parent ~
module create --moduleName service-impl  --parent ~
module create --moduleName service-api  --parent ~
jpa setup --provider HIBERNATE --database HYPERSONIC_PERSISTENT
entity jpa --class model:~.Owner
field string --fieldName name
entity jpa --class model:~.Pet
repository jpa --all --package repository:~
service --all --apiPackage service-api:~ --implPackage service-impl:~


#====================================================================
# TEST 1:  Install web layer for Weblogic servers
#--------------------------------------------------------------------
# Goal:    Check if artifacts are created
#
web mvc setup --appServer WEBLOGIC
#
# Output:  Created application:SRC_MAIN_JAVA/org/example/config
#          Created application:SRC_MAIN_JAVA/org/example/config/WebMvcConfiguration.java
#          Created application:ROOT/src/main/resources
#          Created application:ROOT/src/main/resources/application.properties
#          Created application:SRC_MAIN_WEBAPP/WEB-INF
#          Created application:SRC_MAIN_WEBAPP/WEB-INF/weblogic.xml
#          Created application:SRC_MAIN_WEBAPP/WEB-INF/web.xml
#          Updated application:ROOT/pom.xml [added dependency org.springframework.boot:spring-boot-starter-web:null; added plugin org.apache.maven.plugins:maven-war-plugin:-]
#          Created application:SRC_MAIN_JAVA/org/example/config/WebMvcConfiguration_Roo_WebMvcConfiguration.aj
#
# Result:  Creates a WebMvcConfiguration class, adds the starter
#          web dependency and maven war plugin, and creates weblogic
#          and web configuration files
#====================================================================


#====================================================================
# TEST 2:  Create controller
#--------------------------------------------------------------------
# Goal:    Test if controller artifacts are created
#
module focus --moduleName service-api
web mvc controller --entity model:~.Owner --responseType JSON
#
# Output:  Created application:SRC_MAIN_JAVA/org/example/application/web/OwnersCollectionController.java
#          Created application:SRC_MAIN_JAVA/org/example/application/web/OwnersItemController.java
#          Updated application:ROOT/pom.xml [added dependency org.example:service.api:0.1.0.BUILD-SNAPSHOT;]
#          Created application:SRC_MAIN_JAVA/org/example/application/web/OwnersItemController_Roo_Controller.aj
#          Created application:SRC_MAIN_JAVA/org/example/application/web/OwnersItemController_Roo_JSON.aj
#          Created application:SRC_MAIN_JAVA/org/example/application/web/OwnersCollectionController_Roo_Controller.aj
#          Updated application:ROOT/pom.xml [added dependency org.example:model:0.1.0.BUILD-SNAPSHOT]
#          Created application:SRC_MAIN_JAVA/org/example/application/web/OwnersCollectionController_Roo_JSON.aj
#          Updated application:SRC_MAIN_JAVA/org/example/application/web/OwnersItemController_Roo_JSON.aj
#
# Result:  Creates controller and formatter classes and aj
#====================================================================


#====================================================================
# TEST 3:  Create a second controller for the same entity
#--------------------------------------------------------------------
# Goal:    Test if several controllers are created for the same entity
#
module focus --moduleName application
web mvc controller --entity model:~.Owner --pathPrefix otherowners --package application:~.otherweb
#
# Output:  Created application:SRC_MAIN_JAVA/org/example/application/otherweb
#          Created application:SRC_MAIN_JAVA/org/example/application/otherweb/OwnersCollectionController.java
#          Created application:SRC_MAIN_JAVA/org/example/application/otherweb/OwnersItemController.java
#          Created application:SRC_MAIN_JAVA/org/example/application/otherweb/OwnersCollectionController_Roo_Controller.aj
#          Created application:SRC_MAIN_JAVA/org/example/application/otherweb/OwnersCollectionController_Roo_JSON.aj
#          Created application:SRC_MAIN_JAVA/org/example/application/otherweb/OwnersItemController_Roo_Controller.aj
#          Created application:SRC_MAIN_JAVA/org/example/application/otherweb/OwnersItemController_Roo_JSON.aj
#
# Result:  Creates controller class and aj
#====================================================================


#====================================================================
# TEST 4:  Generate all controller
#--------------------------------------------------------------------
# Goal:    Test if all controllers are created
#
web mvc controller --all --package application:~.web
#
# Output:  Created application:SRC_MAIN_JAVA/org/example/application/web/PetsCollectionController.java
#          Created application:SRC_MAIN_JAVA/org/example/application/web/PetsItemController.java
#          Created application:SRC_MAIN_JAVA/org/example/application/web/PetsItemController_Roo_Controller.aj
#          Created application:SRC_MAIN_JAVA/org/example/application/web/PetsItemController_Roo_JSON.aj
#          Created application:SRC_MAIN_JAVA/org/example/application/web/PetsCollectionController_Roo_Controller.aj
#          Created application:SRC_MAIN_JAVA/org/example/application/web/PetsCollectionController_Roo_JSON.aj
#
# Result:  Creates controller classes and aj for all entites
#====================================================================



#####################################################################
# 						MANUAL TEST
#####################################################################


#====================================================================
# TEST 5:  Reinstall web layer
#--------------------------------------------------------------------
# Goal:    Fail to install web layer
#
# web mvc setup --appServer WEBLOGIC
#
# Output:  Command 'web mvc setup --appServer WEBLOGIC' was found but is not currently available (type 'help' then ENTER to learn about this command)
#
# Result:  Since web layer has been installed, it cannot be updated
#====================================================================

#====================================================================
# TEST 6:  Reinstall web layer if WebMvcConfiguration does not exit
#--------------------------------------------------------------------
# Goal:    Test if WebMvcConfiguration class is created
#
# Delete WebMvcConfiguration class
# Close and open roo console
# web mvc setup --appServer WEBLOGIC
#
# Output:  Created application:SRC_MAIN_JAVA/org/example/config/WebMvcConfiguration.java
#          Created application:SRC_MAIN_JAVA/org/example/config/WebMvcConfiguration_Roo_WebMvcConfiguration.aj
#
# Result:  Since the project does not have a class annotated with
#          @RooWvcConfiguration, web layer is installed again
#====================================================================



